pipeline {
  agent any 
  environment {
		// DOCKERHUB_CREDENTIALS=credentials('ram-dockerhub-login') //
		TRIVY_CRITICAL_THRES=200
		DOCK_IMG_NAME="34.67.194.116/appointme-admin-api:${BUILD_NUMBER}"
		NGINX_PROXY_URL="34.67.194.116"
		date_format = new Date().format('dd-MM-yy-HHmm')
		
	      }
    stages {
      stage('SonarQube analysis') {
        environment{
               scannerHome = tool 'sonar-scanner'
          }
	  agent { label 'slave1' }
        steps { 
          withSonarQubeEnv('sonarqube') {
            sh "${scannerHome}/bin/sonar-scanner"     
           }
        }
     } 
      stage("Quality Gate") {
            steps {
              timeout(time: 10, unit: 'MINUTES') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
   }
   post {
        always {
            emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
        }
    }
   
  
}
