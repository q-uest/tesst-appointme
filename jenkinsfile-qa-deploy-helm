pipeline {

     agent any;

    environment {
    
    
    
    // ============================================  //
    // Nexus Docker Private Registry connect Details //
    // ============================================= //
		
		NEXUS_REG_IP='10.182.0.16'
		NEXUS_REG_PORT=8082
		REPO_NAME="appointme-admin-api"
    
    
    
    // ============================================================================== //
    // Docker image name & Tag will be extracted separately and passed on in the HELM //
    // ============================================================================== //
	
      DOCK_IMG_NAME="${NEXUS_REG_IP}:${NEXUS_REG_PORT}/"+"${params.docker_image}"


    // ============================================================================== //
    // HELM specific variables for Namespace, Templates path & Release Name           //
    // ============================================================================== //

       K8S_NAMESPACE="qa" 
       HELM_TEMPL_PATH="helm-qa"
       HELM_RELEASE_NAME="helm-qa"
	
	

      //================================================== //		
      // Timeout for the Deployment. Default is 5  minutes //
      //================================================== //		
		
        HELM_DEP_TIMEOUT="2m0s"
	
	
    // ====================================================================================================================================================== //
    // Variables for Adding string QA to the Tag after successful deployment of the image & Path to generate list of images with QA Tags for the next job     //
    // ===================================================================================================================================================== //
	
	
	ADD_QA_TAG="${DOCK_IMG_NAME}"+"-QA"
        QA_TAGGED_IMGLST="$HOME"+"/workspace/qa-images.lst"
                    
        //==================================================================//
	// Provide the DEV cluster Details and GCP Priavte Key details here //
	//==================================================================//
	
		JEN_KUBECONFIG="/var/lib/jenkins/.kube/kubeconfig.yaml"
		JEN_GCP_CRED_KEY="/var/lib/jenkins/.kube/key.json"
		
        
        
    }
    stages {
       
        stage("Deploy the image into QA")
        {
            steps {

               
	
                sh '''
		
		
		# Export the Shell variables required to access the GKE cluster
		######################
		export GOOGLE_APPLICATION_CREDENTIALS=${JEN_GCP_CRED_KEY}
		export KUBECONFIG=${JEN_KUBECONFIG}
		
	        ####################################
		# Extract Docker image name and Tag name to pass on with the Helm command below
		#################
		
		DOCK_IMG=`echo $DOCK_IMG_NAME|cut -d ":" -f1,2`
                TAG_NAME=`echo $DOCK_IMG_NAME|cut -d ":" -f3`
		
		##########
		# Deploy in the namespace called "qa"
		########################
		
               helm upgrade --install ${HELM_RELEASE_NAME} --set image.repository=${DOCK_IMG} --set image.tag=${TAG_NAME} -n  ${K8S_NAMESPACE} ${HELM_TEMPL_PATH} --wait  --timeout=${HELM_DEP_TIMEOUT}
                        
                # Add a check whether the deployment is working
                #####
              '''
            }

        }


        stage('Update the Tag of the image to indicate it is deployed in QA')
        {
            steps 
               {
                    withCredentials([usernamePassword(credentialsId: 'nexus-secret', passwordVariable: 'pass', usernameVariable: 'username')]) 
                    {
                            sh '''
                
                            #Add a new tag to the deployed image in Nexus repository to mark it has been rolled out to Dev 
                            ##########   
                        
                            sudo docker login -u ${username} -p ${pass} ${NEXUS_REG_IP}:${NEXUS_REG_PORT}
                            sudo docker tag $DOCK_IMG_NAME ${ADD_QA_TAG}
                            sudo docker push ${ADD_QA_TAG}
                            echo ""
                            echo "Images that are Deployed onto QA......."
                            echo ""
                            curl http://${username}:${pass}@${NEXUS_REG_IP}:${NEXUS_REG_PORT}/v2/${REPO_NAME}/tags/list |sed 's/,/\\n/g'|sed 's/\\"//g'|sed 's/]/\\n/g'|grep "\\-DEV-QA" > /tmp/qa-tagged.lst
                            sed 's/^/'${REPO_NAME}':/g' /tmp/qa-tagged.lst > ${QA_TAGGED_IMGLST}
                            cat ${QA_TAGGED_IMGLST}
                            '''
	               }  
                }
        }
    }
}

